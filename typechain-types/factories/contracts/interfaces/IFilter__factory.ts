/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFilter,
  IFilterInterface,
} from "../../../contracts/interfaces/IFilter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vaddress",
        type: "address",
      },
    ],
    name: "filter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IFilter__factory {
  static readonly abi = _abi;
  static createInterface(): IFilterInterface {
    return new Interface(_abi) as IFilterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IFilter {
    return new Contract(address, _abi, runner) as unknown as IFilter;
  }
}
