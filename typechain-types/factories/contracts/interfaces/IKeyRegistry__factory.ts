/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IKeyRegistry,
  IKeyRegistryInterface,
} from "../../../contracts/interfaces/IKeyRegistry";

const _abi = [
  {
    inputs: [],
    name: "REMOVE_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fid",
        type: "uint256",
      },
      {
        internalType: "enum IKeyRegistry.KeyState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "keyAt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fid",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "keyDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "enum IKeyRegistry.KeyState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "keyType",
            type: "uint32",
          },
        ],
        internalType: "struct IKeyRegistry.KeyData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fid",
        type: "uint256",
      },
      {
        internalType: "enum IKeyRegistry.KeyState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "keysOf",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fid",
        type: "uint256",
      },
      {
        internalType: "enum IKeyRegistry.KeyState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchSize",
        type: "uint256",
      },
    ],
    name: "keysOf",
    outputs: [
      {
        internalType: "bytes[]",
        name: "page",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "nextIdx",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fid",
        type: "uint256",
      },
      {
        internalType: "enum IKeyRegistry.KeyState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "totalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IKeyRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IKeyRegistryInterface {
    return new Interface(_abi) as IKeyRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IKeyRegistry {
    return new Contract(address, _abi, runner) as unknown as IKeyRegistry;
  }
}
