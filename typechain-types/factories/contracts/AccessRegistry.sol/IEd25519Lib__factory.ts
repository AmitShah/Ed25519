/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEd25519Lib,
  IEd25519LibInterface,
} from "../../../contracts/AccessRegistry.sol/IEd25519Lib";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "publicKey",
        type: "bytes32",
      },
    ],
    name: "getVirtualAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IEd25519Lib__factory {
  static readonly abi = _abi;
  static createInterface(): IEd25519LibInterface {
    return new Interface(_abi) as IEd25519LibInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IEd25519Lib {
    return new Contract(address, _abi, runner) as unknown as IEd25519Lib;
  }
}
