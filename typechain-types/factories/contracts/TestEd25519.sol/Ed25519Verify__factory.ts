/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Ed25519Verify,
  Ed25519VerifyInterface,
} from "../../../contracts/TestEd25519.sol/Ed25519Verify";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "k",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "m",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102f7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632bf6eda814610030575b600080fd5b61004361003e366004610129565b610057565b604051901515815260200160405180910390f35b6040517f2bf6eda800000000000000000000000000000000000000000000000000000000815260009073__$31310cef1ad0cbbf8b57835f2385334f76$__90632bf6eda8906100b0908890889088908890600401610215565b602060405180830381865af41580156100cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f19190610298565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561013f57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff8082111561016c57600080fd5b818701915087601f83011261018057600080fd5b813581811115610192576101926100fa565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101d8576101d86100fa565b816040528281528a60208487010111156101f157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b8481526000602085602084015284604084015260806060840152835180608085015260005b818110156102565785810183015185820160a00152820161023a565b50600060a0828601015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505095945050505050565b6000602082840312156102aa57600080fd5b815180151581146102ba57600080fd5b939250505056fea26469706673582212200d5e1d75da023a125ed885e6c92e2d5b7c539e1109b8b67ff347d6417ebd612664736f6c63430008180033";

type Ed25519VerifyConstructorParams =
  | [linkLibraryAddresses: Ed25519VerifyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Ed25519VerifyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ed25519Verify__factory extends ContractFactory {
  constructor(...args: Ed25519VerifyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Ed25519Verify__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: Ed25519VerifyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$31310cef1ad0cbbf8b57835f2385334f76\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Ed25519.sol:Ed25519"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Ed25519Verify & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ed25519Verify__factory {
    return super.connect(runner) as Ed25519Verify__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Ed25519VerifyInterface {
    return new Interface(_abi) as Ed25519VerifyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Ed25519Verify {
    return new Contract(address, _abi, runner) as unknown as Ed25519Verify;
  }
}

export interface Ed25519VerifyLibraryAddresses {
  ["contracts/libraries/Ed25519.sol:Ed25519"]: string;
}
